# Just based on the official example: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  strategy:
    type: Recreate # Ensure all existing pods terminate before new ones start on a roll out
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
        rollme: "3" # Always change this if the number of replicas changes then it will force a new roll out
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2 # old image
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: example-pv
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /tmp
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/os
          operator: In
          values:
          - linux
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: nginx-stateful # has to match .spec.template.metadata.labels
  serviceName: "nginx"
  replicas: 4 # by default is 1
  template:
    metadata:
      labels:
        app: nginx-stateful # has to match .spec.selector.matchLabels
        rollme: "3" # Always change this if the number of replicas changes then it will force a new roll out
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx
        image: k8s.gcr.io/nginx-slim:0.8
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 1Gi